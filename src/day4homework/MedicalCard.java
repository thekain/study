/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package day4homework;

import java.awt.Color;
import java.util.Arrays;
//import java.util.Date;
//import java.text.SimpleDateFormat;
import java.util.Random;

/**
 *
 * @author Amilo
 */
public class MedicalCard extends javax.swing.JFrame {
    String patients[] = new String[10];
    int counter = 0;
    String names[]=new String[19];
    
    
    /**
     * Creates new form MedicalCard
     */
    public MedicalCard() {
        initComponents();
       
        
names[0]="Sophia";
names[1]="Emma";
names[2]="Olivia";
names[3]="Ava";
names[4]="Isabella";
names[5]="Mia";
names[6]="Zoe";
names[7]="Lily";
names[8]="Emily";
names[9]="Madelyn";
names[10]="Jackson";
names[11]="Aiden";
names[12]="Liam";
names[13]="Lucas";
names[14]="Noah";
names[15]="Mason";
names[16]="Ethan";
names[17]="Caden";
names[17]="Jacob";
names[18]="Logan";
         generatorMouseClicked(null);
        
        
        //String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientName = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        labelUp = new javax.swing.JLabel();
        patientUp = new javax.swing.JTextField();
        labelDown = new javax.swing.JLabel();
        patientDown = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        patientWeight = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        labelMessage = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        patientAge = new javax.swing.JTextField();
        labelAge = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        labelMessage2 = new javax.swing.JLabel();
        generator = new javax.swing.JButton();
        labelMessage3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelName.setText("Имя пациента");

        labelUp.setText("Верхнее давление");

        labelDown.setText("Нижнее давление");

        jLabel4.setText("Вес");

        jButton2.setText("Анализ");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        labelMessage.setText(" ");

        jLabel3.setText(" мм рт. ст");

        jLabel7.setText(" мм рт. ст");

        jLabel8.setText(" кг");

        labelAge.setText("Возраст пациента");

        jLabel10.setText(" лет");

        generator.setText("Следующий");
        generator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                generatorMouseClicked(evt);
            }
        });

        jButton1.setText("Сортировка");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(labelMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(generator, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addComponent(labelMessage2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMessage3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelDown)
                                    .addComponent(jLabel4))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patientDown)
                                    .addComponent(patientWeight)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelUp)
                                    .addComponent(labelAge))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patientUp)
                                    .addComponent(patientAge))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelName)
                        .addGap(44, 44, 44)
                        .addComponent(patientName)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelName)
                    .addComponent(patientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAge)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUp)
                    .addComponent(patientUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDown)
                    .addComponent(patientDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(patientWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(generator)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMessage2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMessage3, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        labelMessage2.setText("");
        
        if (patientName.getText().length()==0){
            labelMessage.setText("Введите данные отмеченные красным");
            labelName.setForeground(Color.red);
            return;
        } else {
            labelName.setForeground(Color.black);
            labelMessage.setText("Введите данные");
        }
        
        if (patientUp.getText().length()==0){
            labelMessage.setText("Введите данные отмеченные красным");
            labelUp.setForeground(Color.red);
            return;
        } else {
            labelUp.setForeground(Color.black);
            labelMessage.setText("Введите данные");
            try {
                Integer.parseInt(patientUp.getText());
            } catch (Exception numbers){
                labelMessage2.setText("Только цифровые данные");
                patientUp.setText("");
                return;
            }
        }
        
        if (patientAge.getText().length()==0){
            labelMessage.setText("Введите данные отмеченные красным");
            labelAge.setForeground(Color.red);
            return;
        } else {
            labelAge.setForeground(Color.black);
            labelMessage.setText("Введите данные");
            try {
            Integer.parseInt(patientAge.getText());
            } catch (Exception numbers){
               labelMessage2.setText("Только цифровые данные");
               patientAge.setText("");
               return;
            }
        }        
        
        
        if (patientDown.getText().length()==0){
            labelMessage.setText("Введите данные отмеченные красным");
            patientDown.setForeground(Color.red);
            return;
        } else {
            patientDown.setForeground(Color.black);
            labelMessage.setText("Введите данные");
            try {
                Integer.parseInt(patientDown.getText());
            } catch (Exception numbers){
                labelMessage2.setText("Только цифровые данные");
                patientDown.setText("");
                return;
            }
        }
        
        if (patientWeight.getText().length()==0){
            labelMessage.setText("Введите данные отмеченные красным");
            patientWeight.setForeground(Color.red);
            return;
        } else {
            patientWeight.setForeground(Color.black);
            labelMessage.setText("Введите данные");
            try {
                Integer.parseInt(patientWeight.getText());
            } catch (Exception numbers){
                labelMessage2.setText("Только цифровые данные");
                patientWeight.setText("");
                return;
            }
        }
        
        BloodPressure patientCard = new BloodPressure(
                patientName.getText(),
                patientAge.getText(),
                patientUp.getText(),
                patientDown.getText(),
                patientWeight.getText()
                );   
        //System.out.println(patientCard.patient[0]);
        labelMessage2.setText(patientCard.diagnose);
        if (counter<10) {
            patients[counter]=patientCard.diagnose;
            counter++;
        } else {
            labelMessage2.setText("Unsorted List of Patients:");
            labelMessage.setText("DB is Full. Number of records:"+counter);
           // for (int i=0;i<10;i++){
//                labelMessage3.setText(""+patients[0]+"\r\n"+patients[1]+"\r\n"+patients[2]+"\r\n");
            labelMessage3.setText("<html>"+patients[0]+"<br>"+patients[1]+"<br>"+patients[2]+"<br>"+patients[3]+"<br>"+patients[4]+"<br>"+patients[5]+"<br>"+patients[6]+"<br>"+patients[7]+"<br>"+patients[8]+"<br>"+patients[9]+"</html>");
           // }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void generatorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generatorMouseClicked
        // TODO add your handling code here:
        Random rand = new Random ();
//        int i=rand.nextInt(18);
        patientName.setText(names[rand.nextInt(18)]+" "+names[rand.nextInt(18)]);
        patientAge.setText(Integer.toString(rand.nextInt(100-17)+17));
        patientUp.setText(Integer.toString(rand.nextInt(160-130)+130));
        patientDown.setText(Integer.toString(rand.nextInt(100-50)+50));
        patientWeight.setText(Integer.toString(rand.nextInt(150-40)+40));  
    }//GEN-LAST:event_generatorMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
       String firstLetter; 
       String let;
        Arrays.sort(patients);
        labelMessage3.setText("<html>"+patients[0]+"<br>"+patients[1]+"<br>"+patients[2]+"<br>"+patients[3]+"<br>"+patients[4]+"<br>"+patients[5]+"<br>"+patients[6]+"<br>"+patients[7]+"<br>"+patients[8]+"<br>"+patients[9]+"</html>");
        //firstLetter=patients[0];
        //let=patients[0].substring(6, 7);
//        labelFirst.setText(patients[0].substring(6, 7)+patients[0].substring(6, 7));  
        
//        if (patients[0].substring(6, 7).equals(patients[1].substring(6, 7))){
//            labelMessage4.setText("Yes");
//        } else {
//            labelMessage4.setText("No");
//        }
        String letters;
        //int letcount=0;
        letters="<html><b>"+patients[0].substring(6, 7)+"</b><br>";
        letters=letters+patients[0];
        for (int i=0; i<9;i++){
        if (patients[i].substring(6, 7).equals(patients[i+1].substring(6, 7))){
            letters=letters+"<br>"+patients[i+1];
        } else {
            letters=letters+"<br><b>"+patients[i+1].substring(6, 7)+"</b><br>"+patients[i+1];
        }
        }
        letters=letters+"</html>";
        labelMessage3.setText(""+letters);
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicalCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicalCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicalCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicalCard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicalCard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generator;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelAge;
    private javax.swing.JLabel labelDown;
    private javax.swing.JLabel labelMessage;
    private javax.swing.JLabel labelMessage2;
    private javax.swing.JLabel labelMessage3;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelUp;
    private javax.swing.JTextField patientAge;
    private javax.swing.JTextField patientDown;
    private javax.swing.JTextField patientName;
    private javax.swing.JTextField patientUp;
    private javax.swing.JTextField patientWeight;
    // End of variables declaration//GEN-END:variables
}
